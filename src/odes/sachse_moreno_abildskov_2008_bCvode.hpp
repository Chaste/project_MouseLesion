#ifdef CHASTE_CVODE
#ifndef CELLSACHSE_MORENO_ABILDSKOV_2008_BFROMCELLMLCVODE_HPP_
#define CELLSACHSE_MORENO_ABILDSKOV_2008_BFROMCELLMLCVODE_HPP_

//! @file
//! 
//! This source file was generated from CellML.
//! 
//! Model: sachse_model_2007
//! 
//! Processed by pycml - CellML Tools in Python
//!     (translators: 20279, pycml: 17739, optimize: 17739)
//! on Mon Nov 25 17:27:33 2013
//! 
//! <autogenerated>

#include "ChasteSerialization.hpp"
#include <boost/serialization/base_object.hpp>
#include "AbstractCvodeCell.hpp"
#include "AbstractStimulusFunction.hpp"

class Cellsachse_moreno_abildskov_2008_bFromCellMLCvode : public AbstractCvodeCell
{
    friend class boost::serialization::access;
    template<class Archive>
    void serialize(Archive & archive, const unsigned int version)
    {
        archive & boost::serialization::base_object<AbstractCvodeCell >(*this);
    }
    
    // 
    // Settable parameters and readable variables
    // 
    double var_chaste_interface__environment__fake_dt;
    double var_chaste_interface__i_ionic;
    double var_chaste_interface__I_stim__I_stim;
    double var_chaste_interface__I_stim__stim_amplitude;
    double var_chaste_interface__I_stim__stim_duration;
    double var_chaste_interface__I_stim__stim_start;
    double var_chaste_interface__I_stim__stim_period;
    double var_chaste_interface__membrane__VmReal;
    double var_chaste_interface__environment__time;
    
public:
    double Get_chaste_interface__environment__fake_dt();
    double Get_chaste_interface__i_ionic();
    double Get_chaste_interface__I_stim__I_stim();
    double Get_chaste_interface__I_stim__stim_amplitude();
    double Get_chaste_interface__I_stim__stim_duration();
    double Get_chaste_interface__I_stim__stim_start();
    double Get_chaste_interface__I_stim__stim_period();
    double Get_chaste_interface__membrane__VmReal();
    double Get_chaste_interface__environment__time();
    double Get_membrane_capacitance_constant();
    double Get_membrane_stimulus_current_amplitude_constant();
    double Get_membrane_stimulus_current_duration_constant();
    double Get_membrane_stimulus_current_offset_constant();
    double Get_membrane_stimulus_current_period_constant();
    boost::shared_ptr<RegularStimulus> UseCellMLDefaultStimulus();
    Cellsachse_moreno_abildskov_2008_bFromCellMLCvode(boost::shared_ptr<AbstractIvpOdeSolver> pOdeSolver /* unused; should be empty */, boost::shared_ptr<AbstractStimulusFunction> pIntracellularStimulus);
    ~Cellsachse_moreno_abildskov_2008_bFromCellMLCvode();
    double GetIIonic(const std::vector<double>* pStateVariables=NULL);
    void EvaluateYDerivatives(double var_chaste_interface__environment__time, const N_Vector rY, N_Vector rDY);
    void EvaluateAnalyticJacobian(long int N, double var_chaste_interface__environment__time, N_Vector rY, N_Vector rDY, CHASTE_CVODE_DENSE_MATRIX rJacobian, N_Vector rTmp1, N_Vector rTmp2, N_Vector rTmp3);
    N_Vector ComputeDerivedQuantities(double var_chaste_interface__environment__time, const N_Vector & rY);
};


// Needs to be included last
#include "SerializationExportWrapper.hpp"
CHASTE_CLASS_EXPORT(Cellsachse_moreno_abildskov_2008_bFromCellMLCvode)

namespace boost
{
    namespace serialization
    {
        template<class Archive>
        inline void save_construct_data(
            Archive & ar, const Cellsachse_moreno_abildskov_2008_bFromCellMLCvode * t, const unsigned int fileVersion)
        {
            const boost::shared_ptr<AbstractIvpOdeSolver> p_solver = t->GetSolver();
            const boost::shared_ptr<AbstractStimulusFunction> p_stimulus = t->GetStimulusFunction();
            ar << p_solver;
            ar << p_stimulus;
        }
        
        template<class Archive>
        inline void load_construct_data(
            Archive & ar, Cellsachse_moreno_abildskov_2008_bFromCellMLCvode * t, const unsigned int fileVersion)
        {
            boost::shared_ptr<AbstractIvpOdeSolver> p_solver;
            boost::shared_ptr<AbstractStimulusFunction> p_stimulus;
            ar >> p_solver;
            ar >> p_stimulus;
            ::new(t)Cellsachse_moreno_abildskov_2008_bFromCellMLCvode(p_solver, p_stimulus);
        }
        
    }
    
}

#endif // CELLSACHSE_MORENO_ABILDSKOV_2008_BFROMCELLMLCVODE_HPP_
#endif // CHASTE_CVODE
